 #include <stdint.h>
#include "inc/tm4c123gh6pm.h"
#include <stdio.h>
#include <stdlib.h>
// stellaris #include "inc/lm4f120h5qr.h"
#include <stdbool.h>
#include <time.h>
#include "inc/hw_types.h"
#include "driverlib/gpio.h"
#include "driverlib/sysctl.h"
#include "driverlib/uart.h"
#include "utils/uartstdio.h"
#include <string.h>

#define RW 0x20    //0x20 								// PD3
#define RS 0x40  								// PA6
#define E 0x80 									// PA7
char yazdir[5];
char yazdirSu[5]; char yazdirKahve[5]; char yazdirBisk[5]; char yazdirCiko[5];	char yazdirCay[5];
volatile unsigned long delay;
void portlariAktiflestir(void){
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOA;		// A portunu aktive et
	delay = SYSCTL_RCGC2_R;						// A portunun aktive edilmesini 1 tick bekle
	GPIO_PORTA_AMSEL_R &= ~0b11100000;			// A portunun analog modunu devre dışı bırak
	GPIO_PORTA_PCTL_R &= ~0xFFF00000;			// A portundaki pinlerin voltajını düzenle (PCTL=Power Control)
	GPIO_PORTA_DIR_R |= 0b11100000;				// A portunun giriş çıkışlarını belirle
	GPIO_PORTA_AFSEL_R &= ~0b11100000;			// A portundaki alternatif fonksiyonları seç
	GPIO_PORTA_DEN_R |= 0b11100000;				// A portunun pinlerini aktifleştir
	GPIO_PORTA_DR8R_R |= 0b11100000;			// A portundaki pinlerin 8mA çıkışını aktive et

	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;		// B portunu aktive et
	delay = SYSCTL_RCGC2_R;						// B portunun aktive edilmesini 1 tick bekle
	GPIO_PORTB_AMSEL_R &= ~0b11111111;			// B portunun analog modunu devre dışı bırak
	GPIO_PORTB_PCTL_R &= ~0xFFFFFFFF;			// B portundaki pinlerin voltajını düzenle (PCTL=Power Control)
	GPIO_PORTB_DIR_R |= 0b11111111;				// B portunun giriş çıkışlarını belirle
	GPIO_PORTB_AFSEL_R &= ~0b11111111;			// B portundaki alternatif fonksiyonları seç
	GPIO_PORTB_DEN_R |= 0b11111111;				// B portunun pinlerini aktifleştir
	GPIO_PORTB_DR8R_R |= 0b11111111;			// B portundaki pinlerin 8mA çıkışını aktive et

	/*SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOE;		// E portunu aktive et
	delay = SYSCTL_RCGC2_R;						// E portunun aktive edilmesini 1 tick bekle
	GPIO_PORTE_DIR_R |= 0x00;					// E portunun giriş çıkışlarını belirle
	GPIO_PORTE_DEN_R |= 0b00011111;				// E portunun pinlerini aktifleştir*/
}




void komutGonder(unsigned char LCD_Comment){
	GPIO_PORTA_DATA_R &= ~(RS+RW+E);			// Tüm pinleri sıfırla
	GPIO_PORTB_DATA_R = LCD_Comment;			// Komutu yazdır
	GPIO_PORTA_DATA_R |= E;						// E'yi aç
	GPIO_PORTA_DATA_R &= ~(RS+RW);				// RS ve RW kapat
	for (delay = 0 ; delay < 1; delay++);		// 1us bekle
	GPIO_PORTA_DATA_R &= ~(RS+RW+E);			// RS, RW ve E kapat
	for (delay = 0 ; delay < 1000; delay++);	// 1ms bekle
}

void veriGonder(unsigned char LCD_Data){
	GPIO_PORTB_DATA_R = LCD_Data;				// Write Data
	GPIO_PORTA_DATA_R |= RS+E;					// RS ve E aç
	GPIO_PORTA_DATA_R &= ~RW;					// RW kapat
	for (delay = 0 ; delay < 23 ; delay++);		// 230ns bekle
	GPIO_PORTA_DATA_R &= ~(RS+RW+E);			// RS, RW ve E kapat
	for (delay = 0 ; delay < 1000; delay++);	// 1ms bekle
}

void ekraniAktiflestir(){
	portlariAktiflestir();						// Portları aktifleştir
	for (delay = 0 ; delay < 15000; delay++);	// 15ms bekle
	komutGonder(0x38);							// 0b00111000 -> PortB
	for (delay = 0 ; delay < 5000; delay++);	// 5ms bekle
	komutGonder(0x38);							// 0b00111000 -> PortB
	for (delay = 0 ; delay < 150; delay++);		// 150us bekle
	komutGonder(0x0C);							// 0b00001010 -> PortB
	komutGonder(0x01);							// Ekranı Temizle
	komutGonder(0x06);							// 0b00000110 -> PortB
	for (delay = 0 ; delay < 50000; delay++);	// 50ms bekle
}

void ekranaYazdir(unsigned int line,unsigned int digit, unsigned char *str){
	unsigned int lineCode = line==1 ?0x80:0xC0;	// Line 1 ise 0x80, 2 ise 0xC0 komutu kullanılması gerekiyor
	komutGonder(lineCode + digit);				// Yazının nereden başlayacağını LCD'ye bildir
	while(*str != 0){ veriGonder(*str++); }		// Ve yazdır

}


// secenekler: 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200
#define BAUDRATE 600





void init_UARTstdio() {
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
	GPIOPinConfigure(0x00000001);
	GPIOPinConfigure(0x00000401);
	GPIOPinTypeUART(0x40004000, 0x00000001 | 0x00000002);
	UARTConfigSetExpClk(0x40004000, SysCtlClockGet(), BAUDRATE,
                        	(UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE |
                         	UART_CONFIG_PAR_NONE));
	UARTStdioConfig(0, BAUDRATE, SysCtlClockGet());
}

void init_port_D() {
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOD; // Port D’yi aktiflestir
	//GPIO_PORTF_DIR_R |= 0b00001110;
	delay = SYSCTL_RCGC2_R;  	// zaman gecirmek icin
	GPIO_PORTD_DIR_R |= 0x0E;	// PD 3,2,1,0 pinlerini cikis yap    // 0,4 giriş 1,3 çıkış
	GPIO_PORTD_AFSEL_R &= ~0x0E; // PD 3,2,1,0 pinlerini alternatif fonksinunu 0 yap
	GPIO_PORTD_PUR_R = 0x11;	//pull up direncini aktif
	GPIO_PORTD_DEN_R = 0x1F; 	// pin aktif
	GPIO_PORTD_DEN_R |=  0000000000000010;	// PD ,1, pinlerini aktiflestir
	/*SYSCTL_RCGCGPIO_R |= 0x00000020;  // 1) activate clock for Port F
	  // GPIO_PORTF_LOCK_R = 0x4C4F434B;   // 2) unlock GPIO Port F
	   GPIO_PORTD_CR_R = 0x01;       	// allow changes to PF-0
	   // only PF0 needs to be unlocked, other bits can't be locked
	   GPIO_PORTD_DIR_R = 0x0E;      	// 5) PF4,PF0 in, PF3-1 out
	   GPIO_PORTD_PUR_R = 0x11;      	// enable pull-up on PF0 and PF4
	   GPIO_PORTD_DEN_R = 0x1F;      	// 7) enable digital I/O on PF4-0
/*	GPIO_PORTD_DIR_R |= 0x0F;	// PD 3,2,1,0 pinlerini cikis yap
	GPIO_PORTD_AFSEL_R &= ~0x0F; // PD 3,2,1,0 pinlerini alternatif fonksinunu 0 yap
	GPIO_PORTD_DEN_R |= 0x0F;	// PD 3,2,1,0 pinlerini aktiflestir*/

}
void init_port_f(){
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;
	delay = SYSCTL_RCGC2_R;
	GPIO_PORTF_DIR_R |= 0b00001010;
	GPIO_PORTF_DEN_R |= 0b00001010;
}
void init_port_B() {
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;
	GPIO_PORTB_DIR_R |= 0000000011111111;

}

void bizim_pp(){
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOD;
	delay = SYSCTL_RCGC2_R;
	GPIO_PORTD_DIR_R |= 0x0F;
	GPIO_PORTD_DEN_R |= 0x0F;
	GPIO_PORTD_DR8R_R |= 0b11111111; // B portundaki pinlerin 8mA çıkışını aktive et
	GPIO_PORTD_AMSEL_R &= ~0b11111111;			// B portunun analog modunu devre dışı bırak
	GPIO_PORTD_PCTL_R &= ~0xFFFFFFFF; // B portundaki pinlerin voltajını düzenle (PCTL=Power Control)
	GPIO_PORTD_AFSEL_R &= ~0b11111111; // B portundaki alternatif fonksiyonları seç
}

void bizim_E(){
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOE;
	delay = SYSCTL_RCGC2_R;
	GPIO_PORTE_DIR_R |= 0xC1;
	GPIO_PORTE_PUR_R = 0x0E;
	GPIO_PORTE_DEN_R |= 0x0E;
}
void bizim_D(){
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOD;
	delay = SYSCTL_RCGC2_R;
	GPIO_PORTD_DIR_R |= 0x30;	// PD 3,2,1,0 pinlerini cikis yap    // 0,4,1 giriş 2,3 çıkış
	GPIO_PORTD_PUR_R = 0xCF;	//pull up direncini aktif
	GPIO_PORTD_DEN_R = 0xCF; 	// pin aktif
}
void bizim_x(){
	volatile unsigned long delay;
		SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOC;
		delay = SYSCTL_RCGC2_R;
		GPIO_PORTC_DIR_R |=0000000000000000;
		GPIO_PORTC_PUR_R =0000000111111111;
		GPIO_PORTC_DEN_R =0000001111111111;
}
void bizim_C(){
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOC;
	delay = SYSCTL_RCGC2_R;
	GPIO_PORTC_DIR_R |= 0x100;	// PD 3,2,1,0 pinlerini cikis yap    // 0,4,1 giriş 2,3 çıkış
	GPIO_PORTC_PUR_R = 0xFF;	//pull up direncini aktif
	GPIO_PORTC_DEN_R = 0xFF; 	// pin aktif
}

void isikport(){
	  volatile unsigned long tmp; // bu degisken gecikme yapmak icin gerekli
		 // SYSCTL_RCGCGPIO_R=SYSCTL_RCGC2_GPIOF;
		   tmp = SYSCTL_RCGCGPIO_R;    	// allow time for clock to start
		   SYSCTL_RCGCGPIO_R |= 0x00000020;  // 1) activate clock for Port F
		   GPIO_PORTF_DIR_R = 0x0E;      	// 5) PF4,PF0 in, PF3-1 out
		  GPIO_PORTF_PUR_R = 0x10;
		   GPIO_PORTF_DEN_R = 0x1F;      	// 7) enable digital I/O on PF4-0
}

	void ekrani_temizle(){
		ekranaYazdir(1,0,"                 ");
		ekranaYazdir(2,0,"                 ");


}	 int kasa [3]={20,20,10};
	 char (*urunler[20])[14]={"1","su","30","50 Kurus",
					"2","cay","20","1 TL",
					"3","kahve","15","1.5 TL",
					"4","cikolata","50","1.75 TL",
					"5","biskuvi","100","2 TL"};


	void toString(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdir[h] = dizi[t]+48;
					t++;
				}

				yazdir[boyut]= '\0';
	}

	void toStringSu(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdirSu[h] = dizi[t]+48;
					t++;
				}

				yazdirSu[boyut]= '\0';
	}

	void toStringCay(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdirCay[h] = dizi[t]+48;
					t++;
				}

				yazdirCay[boyut]= '\0';
	}
	void toStringKahve(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdirKahve[h] = dizi[t]+48;
					t++;
				}

				yazdirKahve[boyut]= '\0';
	}

	void toStringCiko(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdirCiko[h] = dizi[t]+48;
					t++;
				}

				yazdirCiko[boyut]= '\0';
	}

	void toStringBisk(int n){
					int boyut=0;
					int temp2 = n;
				while(1){
					 boyut++;

					 temp2/=10;
					 if(temp2==0)
					 break;

				}
			//	UARTprintf("-------su2-----------%s------",urunler[2]);
				int dizi[boyut];
				int i=0;
				int j;
				//125
				int temp = n;
			///	UARTprintf("-------su3-----------%s------",urunler[2]);
				 while(1){
					 dizi[i] = temp%10;
					 temp = temp / 10;
					 i++;
					 if(temp == 0)
						 break;
				 }


				char p[3];
				int t = 0;
				int h;
				for(h=boyut-1; h>=0;h--){
					yazdirBisk[h] = dizi[t]+48;
					t++;
				}

				yazdir[boyut]= '\0';
	}


	int paraUstuVer(int ver){
		int i,j;
		int bir=0;
		int elli=0;
		int ybes=0;
		int temp=0;
		int kontrol = 0;
		for(i = 2;i>= 0; i--){
			if(i == 2){
			for(j=0;j<kasa[i];j++){
				bir++;
				temp+=100;
				if(temp>ver){
					temp-=100;
					bir--;
					break;
				}
				if(temp == ver){
					goto cikis;
				}
			}
			}
			if(i == 1){
			for(j=0;j<kasa[i];j++){
				elli++;
				temp+=50;
				if(temp>ver){
					temp-=50;
					elli--;
					break;
				}
				if(temp == ver){
					goto cikis;
				}
			}
			}
				if(i == 0){
			for(j=0;j<kasa[i];j++){
				ybes++;
				temp+=25;
				if(temp>ver){
					temp-=25;
					ybes--;
					break;
				}
				if(temp == ver){

					goto cikis;
				}
			}
			}



		}
						if (temp != ver) {
						UARTprintf("Para verilemedi!");
						kontrol = 1;
						return 0;
						}

		cikis: if(kontrol == 0) {
			kasa[0]-= ybes;
			kasa[1]-= elli;
			kasa[2]-= bir;
			return 1;
			}






	}








int main() {
	int random;
   bizim_D();
   bizim_E();
  init_UARTstdio();
 int arti=0;
 // toString(125);
//  bizim_B();
   int kurus=0;
  bizim_C();
 // isikport();
  init_port_f();
  volatile int atilan25=0;
  volatile int atilan50=0;
  volatile int atilan1=0;
  volatile int alinansu=0;
  volatile int alinancay=0;
  volatile int alinankahve=0;
  volatile int alinanbisk=0;
  volatile int alinanciko=0;
  ekraniAktiflestir();


	 //su 0-3
	 //cay 4-7
	 //kahve 8-11
	 //ciko 12-15
	 //biskevit 16-19
	 int uu;
	 for(uu=0;uu<20;uu++){
		 if( uu%4 == 2 ){
			 UARTprintf("*%s*",urunler[uu]);
		 }
	 }

	 //a[0]="blah";
	 //a[1]="hmm";
	//printf("%s",urunler[1]);
	volatile unsigned long delay;
	//init_port_B();
	//init_port_D();
	//init_UARTstdio();
	//init_port_f();

bas: UARTprintf("basa dondu");
// ekranaYazdir(1,0,"ilker abi benisik");
// ekranaYazdir(2,0,"ali abi sen de");

	ekranaYazdir(1,0,"Otomat 2.0");
	ekranaYazdir(2,0,"by Ali Ilker");

	while (1) {
	// UARTprintf(" ::%s:: ",a[14]);
		for (delay = 0 ; delay < 100000 ; delay++);
		int button_bitis,button_sol;
		int button_b25, button_b50, button_b1,button_csu,button_ccay,button_ckahve,button_cciko,button_cbisk;
			//button_b25 = GPIO_PORTD_DATA_R &  0b00010;    //unutma
		//	button_ccay = GPIO_PORTB_DATA_R & 0b10000;
			button_b25 = GPIO_PORTD_DATA_R & 0b1000000;
			button_b1 = GPIO_PORTD_DATA_R & 0b00100;
			button_b50 = GPIO_PORTC_DATA_R & 0b100000;
		/*	button_csu = GPIO_PORTB_DATA_R & 0b01000;
			button_cciko = GPIO_PORTB_DATA_R & 0b100000;
			button_cbisk = GPIO_PORTB_DATA_R & 0b1000000;
			button_ckahve = GPIO_PORTB_DATA_R & 0b10000000;*/
			button_bitis= GPIO_PORTC_DATA_R & 0b10000;
			//button_sol = GPIO_PORTF_DATA_R & 0b00001;
			//int para;
			//UARTprintf("para : %f",para);
		//UARTprintf("rast");
	/*	int zaman=17;
	//	srand(NULL);
		int random,sayi;
		random=rand()%5;
		zaman=zaman*6;

		UARTprintf("rast: %d\n", random);
		// sagdaki buttonun degerini oku, degiskene degerini ata


		 // soldaki buttonun degerini oku, degiskene degerini ata
		  	 button_sol = GPIO_PORTD_DATA_R & 0b10000;

		  //	GPIO_PORTD_DATA_R |= 0b01110;
		  //	UARTprintf("buttondeger: %d\n", button_sag);
*/
		  	if(button_b25==0){
		  		ekrani_temizle();
		  		ekranaYazdir(1,0,"25 krs atildi");

		  		//printf("tdjgs");
		  	/*	if(random==2){

		  				  		GPIO_PORTF_DATA_R |= 0b00000010;
		  				  		for (delay = 0 ; delay < 400000 ; delay++);
		  				  		GPIO_PORTF_DATA_R &=~(0b00000010);
		  				  	}
		  				  	else{

		  				  		GPIO_PORTF_DATA_R |= 0b00001000;
		  				  		for (delay = 0 ; delay < 400000 ; delay++);
		  				  		GPIO_PORTF_DATA_R &=~(0b00001000);
		  				  	}
			 // 	UARTprintf("buttondeger: %d\n", button_sag);
		  		  GPIO_PORTD_DATA_R |= 0b00010; // PD(1)’ü 1 yap*/
		  		UARTprintf("25 krs atildi");

		  		kurus+=25;
		  		atilan25++;


		  		toString(kurus);
		  		ekranaYazdir(2,0,"Bakiye:");
		  		//UARTprintf("%s",p);

		  		ekranaYazdir(2,8,yazdir);
		  		ekranaYazdir(2,13,"krs");

		  	 }
		   if(button_b50==0){
				ekrani_temizle();
				ekranaYazdir(1,0,"50 krs atildi");
		  		UARTprintf("50 krs atildi");
		  		kurus+=50;
		  		atilan50++;
		  		toString(kurus);
		  				  		ekranaYazdir(2,0,"Bakiye:");
		  				  		//UARTprintf("%s",p);

		  				  		ekranaYazdir(2,8,yazdir);
		  				  	ekranaYazdir(2,13,"krs");
		  	}
		   if(button_b1==0){
				ekrani_temizle();
				ekranaYazdir(1,0,"1 TL atildi");
		  		UARTprintf("1 tl atildi");
		  		kurus+=100;
		  		atilan1++;
		  		toString(kurus);
		  				  		ekranaYazdir(2,0,"Bakiye:");
		  				  		//UARTprintf("%s",p);

		  				  		ekranaYazdir(2,8,yazdir);
		  				  	ekranaYazdir(2,13,"krs");
		  	}
		   if(button_bitis==0){

			   UARTprintf("bitti");
			   ekrani_temizle();
			   ekranaYazdir(1,0,"Urun secimi:");
				toString(kurus);
				  				  		ekranaYazdir(2,0,"Bakiye:");
				  				  		//UARTprintf("%s",p);

				  				  		ekranaYazdir(2,8,yazdir);
				  				  	ekranaYazdir(2,13,"krs");
			   break;
		   }
	/*	   if(button_sol==0){
			  goto bas;
		   }

		  	if(button_csu==0){
		  		UARTprintf("su alindi");
		  	}
		   if(button_ccay==0){
		  		UARTprintf("cay alindi");
		  	}
		  	if(button_ckahve==0){
		  		UARTprintf("kahve alindi");
		  	}
		   if(button_cciko==0){
		  		UARTprintf("cikolata alindi");
		  	}
		  	 if(button_cbisk==0){
		  		UARTprintf("biskuvi alindi");
		  	}
*/





   /*	GPIO_PORTD_DATA_R |= 0b0010; // PD1’i 1 yap
   	GPIO_PORTD_DATA_R &= ~0b0001; // PD0’i 0 yap

	for (delay = 0 ; delay < 400000 ; delay++)
       		;

   GPIO_PORTD_DATA_R |= 0b0001; // PD0’i 1 yap
   	GPIO_PORTD_DATA_R &= ~0b0010; // PD1’i 0 yap

   	for (delay = 0 ; delay < 400000 ; delay++)
       		;*/
	}


	UARTprintf("\n\n kurus : %d",kurus);
	UARTprintf("\n\n 25kr:  %d",kasa[0]);
	UARTprintf("\n\n 50 kr : %d",kasa[1]);
	UARTprintf("\n\n 1 tl %d",kasa[2]);
	int odenecekkrs;
	ekrani_temizle();

	while(1){
		random=rand()%4+1;
			 //su 0-3
			 //cay 4-7
			 //kahve 8-11
			 //ciko 12-15
			 //biskevit 16-19
		for (delay = 0 ; delay < 100000 ; delay++);
		int button_bitis,button_sol;
		int button_csu,button_ccay,button_ckahve,button_cciko,button_cbisk;
		button_csu = GPIO_PORTC_DATA_R & 0b1000000;
		button_cciko = GPIO_PORTD_DATA_R & 0b01000;
		button_cbisk = GPIO_PORTE_DATA_R & 0b00010;/////////////////
		button_ckahve = GPIO_PORTE_DATA_R & 0b00100;///////////////
		button_ccay = GPIO_PORTE_DATA_R & 0b01000; //d7//////////
		button_bitis= GPIO_PORTC_DATA_R & 0b10000;







		if(button_csu==0){
			int i;
			UARTprintf("\n\n su alındı");
			for(i=0;i<20;i++){
				if(urunler[i]=="su"){
					UARTprintf("\n\n  %s",urunler[i+2]);
					char *fiyat =strstr(urunler[i+2],"50");
					if(fiyat!=NULL){
						int fiyatint=atoi(fiyat);
						UARTprintf("\n\n  %d",fiyatint);
						odenecekkrs+=fiyatint;
						alinansu++;
					toString(alinansu);
						ekranaYazdir(1,0,"Su:"); ekranaYazdir(1,3, yazdir);
					}
				}
			}

		}
		if(button_ccay==0){
			int i;
					UARTprintf("\n\n cay alındı");
					for(i=0;i<20;i++){
						if(urunler[i]=="cay"){
							UARTprintf("\n\n  %s",urunler[i+2]);
							char *fiyat =strstr(urunler[i+2],"1");
							if(fiyat!=NULL){
								int fiyatint=atoi(fiyat);
								UARTprintf("\n\n  %d",fiyatint);
								odenecekkrs+=fiyatint*100;
								alinancay++;
								 for (delay = 0; delay < 1000; delay++);
								toString(alinancay);
								ekranaYazdir(1,5,"Cay:"); ekranaYazdir(1,9, yazdir);
							}
						}
					}
		}
		if(button_ckahve==0){
			int i;
					UARTprintf("\n\n kahve alındı");
					for(i=0;i<20;i++){
						if(urunler[i]=="kahve"){
							UARTprintf("\n\n  %s",urunler[i+2]);
						   char *fiyat =strstr(urunler[i+2],"1.5");
							if(fiyat!=NULL){

								int fiyatfloat=(float) atoi(fiyat);
								fiyatfloat=fiyatfloat*150;
								//int fiyatint = (int)fiyatfloat;
								UARTprintf("\n\n  kurus : %d",fiyatfloat);
								odenecekkrs+=fiyatfloat;
								alinankahve++;
								toString(alinankahve);
								ekranaYazdir(1,11,"Khv:"); ekranaYazdir(1,15, yazdir);
							}
						}
					}
		}
		if(button_cbisk==0){
				int i;
						UARTprintf("\n\n biskuvi alındı");
						for(i=0;i<20;i++){
							if(urunler[i]=="biskuvi"){
								UARTprintf("\n\n  %s",urunler[i+2]);
							   char *fiyat =strstr(urunler[i+2],"2");
								if(fiyat!=NULL){

									int fiyatfloat=atoi(fiyat);
									fiyatfloat=fiyatfloat*200;
									//int fiyatint = (int)fiyatfloat;
									UARTprintf("\n\n  kurus : %d",fiyatfloat);
									odenecekkrs+=fiyatfloat;
									alinanbisk++;
									toString(alinanbisk);
									ekranaYazdir(2,0,"Bskvi:"); ekranaYazdir(2,6, yazdir);
								}
							}
						}
			}
		if(button_cciko==0){
						int i;
								UARTprintf("\n\n cikolata alındı");
								for(i=0;i<20;i++){
									if(urunler[i]=="cikolata"){
										UARTprintf("\n\n  %s",urunler[i+2]);
									   char *fiyat =strstr(urunler[i+2],"1.75");
										if(fiyat!=NULL){

											int fiyatfloat=atoi(fiyat);
											fiyatfloat=fiyatfloat*175;
											//int fiyatint = (int)fiyatfloat;
											UARTprintf("\n\n  kurus : %d",fiyatfloat);
											odenecekkrs+=fiyatfloat;
											alinanciko++;
											toString(alinanciko);
											ekranaYazdir(2,10,"Cklt:"); ekranaYazdir(2,15, yazdir);
										}
									}
								}
					}
		if(button_bitis==0){

			break;
		}
		/* if(button_sol==0){
			 goto bas;
		  }
*/

	}

	int i;
	int su;
	int kahve;
	int bisk;
	int cay;
	int ciko;
	//srand();
	int paraUstu = 0;
		UARTprintf("randoom : %d",random);

		if(random==2){
			 // kirmizi ledi yak
		  	 GPIO_PORTF_DATA_R |= 0b00010; // 0x02

		  	 for (delay = 0; delay < 4000000; delay++)
		  		 ;

		  	 // kirmizi ledi sondur
		  //	 GPIO_PORTF_DATA_R &= ~0b00010;


		}
		else{

			// mavi ledi yak
			int i;
			  	 GPIO_PORTF_DATA_R |= 0b01000; // 0x04

			  	 for (delay = 0; delay < 4000000; delay++)
			  		;

			  	 // mavi ledi sondur
			  	// GPIO_PORTF_DATA_R &= ~0b01000;
			  	 UARTprintf("odenecek tutar : %d ",odenecekkrs);
			  	 UARTprintf("atilan para : %d ",kurus);



			  	 if(odenecekkrs<=kurus){
			  		 paraUstu = kurus - odenecekkrs;
			  			kasa[0]=kasa[0]+atilan25;
			  			kasa[1]=kasa[1]+atilan50;
			  			kasa[2]=kasa[2]+atilan1;


			  		int deger =	paraUstuVer(paraUstu);
			  		if(deger == 0){
			  			kasa[0]=kasa[0]-atilan25;
			  			kasa[1]=kasa[1]-atilan50;
			  			kasa[2]=kasa[2]-atilan1;
			  			ekrani_temizle();
			  			ekranaYazdir(1,0 ,"Para iade edildi");
			  			ekranaYazdir(2,0, "Kasada para yok");

			  		}

			  		else {
			  			toString(paraUstu);
			  			//ekranaYazdir(1,0 ,"Iade:"); ekranaYazdir(1 ,6 ,"1 tl:"); ekranaYazdir(1 ,13 ,yazdir);
			  		//	ekranaYazdir(2,0, "50 kr:"); ekranaYazdir(2 ,0 ,"1 tl:");
			  			ekrani_temizle();
			  			ekranaYazdir(1 ,0 ,"iade: ");
			  			ekranaYazdir(1 ,7 ,yazdir); ekranaYazdir(1 ,12 ,"krs");
			  			ekranaYazdir(2 ,0 ,"GULE GULE...");
			  		}
			  		if(alinansu>0){

			  			UARTprintf("girdiiii");
			  			for(i=0;i<20;i++){
			  				if(urunler[i]=="su"){
			  					char *stok=urunler[i+1];
			  					int stoksayi=atoi(stok);
			  					stoksayi=stoksayi-alinansu;
			  					UARTprintf("\nStoksayi: %d\n", stoksayi);

			  					toStringSu(stoksayi);
			  					urunler[2]=yazdirSu;
			  					UARTprintf("\nyazdirsu:%s-- %s\n\n", yazdir, urunler[i+1]);
			  					break;
			  				//	sprintf(str, "%d", stoksayi);
			  				//	urunler[i+1]=str;
			  					//UARTprintf("%s",urunler[2]);
			  				}
			  			}
			  		}
			  		if(alinancay>0){
			  			for(i=0;i<20;i++){
			  				if(urunler[i]=="cay"){
			  				  	char *stok=urunler[i+1];
			  				  	int stoksayi=atoi(stok);
			  				stoksayi=stoksayi-alinancay;
			  				toStringCay(stoksayi);
			  				urunler[i+1]=yazdirCay;
			  				//cay=yazdir;
			  				cay = stoksayi;
			  				break;
			  				  		/*char str[12];
			  				  		sprintf(str, "%d", stoksayi);
			  				  		urunler[i+1]=str;*/
			  				  				}
			  				  			}
			  		}
			  		if(alinankahve>0){
			  				  			for(i=0;i<20;i++){
			  				  				if(urunler[i]=="kahve"){
			  				  					char *stok=urunler[i+1];
			  				  					int stoksayi=atoi(stok);
			  				  					stoksayi=stoksayi-alinankahve;
			  				  					kahve = stoksayi;
			  				  				toStringKahve(stoksayi);
			  				  					urunler[i+1]=yazdirKahve;
			  				  				//	kahve=yazdir;
			  				  					break;
			  				  					/*char str[12];
			  				  					sprintf(str, "%d", stoksayi);
			  				  					urunler[i+1]=str;*/
			  				  				}
			  				  			}
			  				  		}
			  		if(alinanbisk>0){
			  				  			for(i=0;i<20;i++){
			  				  				if(urunler[i]=="biskuvi"){
			  				  					char *stok=urunler[i+1];
			  				  					int stoksayi=atoi(stok);
			  				  					stoksayi=stoksayi-alinanbisk;
			  				  					bisk = stoksayi;
			  				  				toStringBisk(stoksayi);
			  				  					urunler[i+1]=yazdirBisk;

			  				  					break;
			  				  					/*char str[12];
			  				  					sprintf(str, "%d", stoksayi);
			  				  					urunler[i+1]=str;*/
			  				  				}
			  				  			}
			  				  		}
			  		if(alinanciko>0){
			  				  			for(i=0;i<20;i++){
			  				  				if(urunler[i]=="cikolata"){
			  				  				UARTprintf("---+++++++++%s++++++++++",urunler[i]);
			  				  					char *stok=urunler[i+1];
			  				  					int stoksayi=atoi(stok);
			  				  					stoksayi=stoksayi-alinanciko;
			  				  				UARTprintf("\nyazdirsu:--++ %s\n\n",urunler[2]);
			  				  				toStringCiko(stoksayi);

			  				  				UARTprintf("\nyazdirsu:--ii %s\n\n",urunler[2]);
			  				  				urunler[14]=yazdirCiko;

			  				  				UARTprintf("\nyazdirciko:%s-- %s\n\n", yazdir, urunler[i+1]);
			  				  				UARTprintf("\yazdirsu:--aa %s\n\n",urunler[2]);

			  				  				break;
			  				  					/*char str[12];
			  				  					sprintf(str, "%d", stoksayi);
			  				  					urunler[i+1]=str;*/
			  				  				}
			  				  			}
			  				  		}

			  	 }

		}



		UARTprintf("\n25: %d- 50: %d 1: %d\n", kasa[0], kasa[1], kasa[2]);
		for(uu=0;uu<20;uu++){
				 if( uu%4 == 2 ){
					 UARTprintf("*%s*",urunler[uu]);
				 }
			 }
}
/*#include <stdint.h>
#include "inc/tm4c123gh6pm.h"

int main(void) {
    volatile unsigned long delay;

	// PORTF'yi aktiflestir
    SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;
    delay = SYSCTL_RCGC2_R; // zaman gecirmek icin yukarida degistirdigimiz registeri okuyoruz

	// PORTF'nin 4. pinini cikis olarak ayarliyoruz
    GPIO_PORTF_DIR_R |= 0b00001000;

	// PORTF'nin 4. pinini aktiflestiriyoruz
    GPIO_PORTF_DEN_R |= 0b00001000;

	// PORTF'nin 3. pinini cikis olarak ayarliyoruz
    GPIO_PORTF_DIR_R |= 0b00000100;

	// PORTF'nin 3. pinini aktiflestiriyoruz
    GPIO_PORTF_DEN_R |= 0b00000100;
  //
    while(1) {

     		// Mavi LED'i yak (PortF 2. bite 1 ver)

              GPIO_PORTF_DATA_R |= 0b00001000;
             for(delay = 0; delay < 400000; delay++)
     			/* bos dongu ile bekle
              GPIO_PORTF_DATA_R &= ~(0b00001000);
                GPIO_PORTF_DATA_R |= 0b00000100;
                for(delay = 0; delay < 400000; delay++)
     			/* bos dongu ile bekle
             GPIO_PORTF_DATA_R &= ~(0b00000100);

             GPIO_PORTF_DATA_R |= 0b00001000;
             GPIO_PORTF_DATA_R |= 0b00000100;
              for(delay = 0; delay < 400000; delay++)
          /* bos dongu ile bekle ;
              GPIO_PORTF_DATA_R &= ~(0b00001000);
              GPIO_PORTF_DATA_R &= ~(0b00000100);






         }

}*/
